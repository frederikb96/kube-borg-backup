{{- $namespaces := dict -}}
{{- range .Values.apps -}}
  {{- $_ := set $namespaces .namespace true -}}
{{- end -}}

---
# ClusterRole for reading cluster-scoped resources (StorageClasses)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "kube-borg-backup.rbacName" (dict "root" . "resource" "clusterrole") }}
  labels:
    {{- include "kube-borg-backup.labels" . | nindent 4 }}
rules:
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get","list"]
  - apiGroups: ["longhorn.io"]
    resources: ["volumes"]
    verbs: ["get","list"]

{{- range $namespace := keys $namespaces }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "kube-borg-backup.serviceAccountName" $ }}
  namespace: {{ $namespace }}
  labels:
    {{- include "kube-borg-backup.labels" $ | nindent 4 }}
---
# ClusterRoleBinding for reading StorageClasses
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "kube-borg-backup.rbacName" (dict "root" $ "resource" "clusterrolebinding") }}-{{ $namespace }}
  labels:
    {{- include "kube-borg-backup.labels" $ | nindent 4 }}
roleRef:
  kind: ClusterRole
  name: {{ include "kube-borg-backup.rbacName" (dict "root" $ "resource" "clusterrole") }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ include "kube-borg-backup.serviceAccountName" $ }}
    namespace: {{ $namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "kube-borg-backup.rbacName" (dict "root" $ "resource" "role") }}
  namespace: {{ $namespace }}
  labels:
    {{- include "kube-borg-backup.labels" $ | nindent 4 }}
rules:
  # Snapshot API - for snapshot operations
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["create","get","list","delete","patch","watch"]
  # Core API - for PVCs, pods, secrets, events
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["create","get","list","delete","patch","watch"]
  - apiGroups: [""]
    resources: ["pods","pods/log","pods/exec"]
    verbs: ["create","get","list","delete","patch","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create","get","list","delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","list","watch"]
  # Apps API - for scale operations during restore
  - apiGroups: ["apps"]
    resources: ["deployments","statefulsets","replicasets","daemonsets"]
    verbs: ["get","list","patch"]
  # Batch API - for future in-cluster restore mode
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create","get","list","delete"]
{{- if $.Values.restore }}
{{- if $.Values.restore.rbac }}
{{- if $.Values.restore.rbac.additionalRules }}
  # User-defined additional rules for custom restore hooks
{{- toYaml $.Values.restore.rbac.additionalRules | nindent 2 }}
{{- end }}
{{- end }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "kube-borg-backup.rbacName" (dict "root" $ "resource" "rolebinding") }}
  namespace: {{ $namespace }}
  labels:
    {{- include "kube-borg-backup.labels" $ | nindent 4 }}
roleRef:
  kind: Role
  name: {{ include "kube-borg-backup.rbacName" (dict "root" $ "resource" "role") }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ include "kube-borg-backup.serviceAccountName" $ }}
    namespace: {{ $namespace }}
{{ "" }}
{{- end }}
