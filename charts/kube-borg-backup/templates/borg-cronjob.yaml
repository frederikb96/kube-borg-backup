apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.borgbackup.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "kube-borg-backup.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.borgbackup.cron.schedule | quote }}
  concurrencyPolicy: {{ .Values.borgbackup.cron.concurrencyPolicy }}
  startingDeadlineSeconds: {{ .Values.borgbackup.cron.startingDeadlineSeconds }}
  successfulJobsHistoryLimit: {{ .Values.borgbackup.cron.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.borgbackup.cron.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      activeDeadlineSeconds: {{ .Values.borgbackup.cron.activeDeadlineSeconds }}
      backoffLimit: 0
      template:
        spec:
          serviceAccountName: {{ .Values.serviceAccount.name }}
          restartPolicy: Never
          containers:
            - name: {{ .Values.borgbackup.containerName }}
              image: "{{ .Values.borgbackup.image.repository }}:{{ .Values.borgbackup.image.tag }}"
              imagePullPolicy: {{ .Values.borgbackup.image.pullPolicy }}
              command: ["python", "-m", "kube_snapshot_borgbackup.main"]
              volumeMounts:
                - name: config
                  mountPath: /config
                  readOnly: true
          volumes:
            - name: config
              secret:
                secretName: {{ include "kube-borg-backup.borgConfigSecret" . }}
