{{- range .Values.apps }}
{{- $_ := include "kube-borg-backup.validateAppName" .name -}}
{{- $app := . -}}
{{- $borgConfig := fromJson (include "kube-borg-backup.mergeBorgConfig" (dict "root" $ "app" .)) -}}
{{- $_ := include "kube-borg-backup.validateBorgConfig" (dict "appName" .name "config" $borgConfig) -}}
{{- $borgRepo := fromJson (include "kube-borg-backup.resolveBorgRepo" (dict "root" $ "repoName" $borgConfig.borgRepo)) -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kube-borg-backup.appResourceName" (dict "root" $ "appName" .name "resource" "borg-config") }}
  namespace: {{ .namespace }}
  labels:
    {{- include "kube-borg-backup.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ .name }}
type: Opaque
stringData:
  config.yaml: |
    namespace: {{ .namespace }}
    releaseName: {{ include "kube-borg-backup.appBaseName" (dict "root" $ "appName" .name) }}
    pod:
      image:
{{ toYaml $borgConfig.pod.image | indent 8 }}
      privileged: {{ $borgConfig.pod.privileged | default true }}
      resources:
{{ toYaml $borgConfig.pod.resources | indent 8 }}
    borgRepo: {{ $borgRepo.repo | quote }}
    borgPassphrase: {{ $borgRepo.passphrase | quote }}
    sshPrivateKey: |
{{ $borgRepo.privateKey | indent 6 }}
    cachePVC: {{ $borgConfig.cache.pvcName }}
    retention:
{{ toYaml $borgConfig.retention | indent 6 }}
    backups:
{{- range $borgConfig.pvcs }}
      - name: {{ if .archivePrefix }}{{ .archivePrefix }}{{ else }}{{ printf "%s-%s" $app.name .name }}{{ end }}
        pvc: {{ .pvc }}
        class: {{ .class }}
        timeout: {{ .timeout }}
        {{- if .cloneBindTimeout }}
        cloneBindTimeout: {{ .cloneBindTimeout }}
        {{- end }}
{{- end }}
{{- end }}
