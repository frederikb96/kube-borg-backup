# Default configuration for kube-borg-backup
# This file contains sensible defaults. Add your applications in the apps[] list.

## =============================================================================
## Borg Repository Definitions (Reusable)
## =============================================================================
# Define borg repositories once, reference by name in apps
# Multiple apps can share the same repository with app-specific prefixes
borgRepos: []
  # - name: borgbase-main
  #   repo: "ssh://user@borgbase.com/./repo"
  #   passphrase: "your-borg-passphrase"
  #   privateKey: |
  #     -----BEGIN OPENSSH PRIVATE KEY-----
  #     your-ssh-private-key-here
  #     -----END OPENSSH PRIVATE KEY-----

## =============================================================================
## Snapshot Defaults (Applied to all apps unless overridden)
## =============================================================================
snapshot:
  image:
    repository: ghcr.io/frederikb96/kube-borg-backup/controller
    tag: latest
    pullPolicy: Always

  # Image for rsync pods during snapshot restore
  pod:
    image:
      repository: ghcr.io/frederikb96/kube-borg-backup/backup-runner
      tag: latest
      pullPolicy: IfNotPresent

  cron:
    schedule: "0 */4 * * *"  # Every 4 hours
    startingDeadlineSeconds: 60
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1

  timeout: 600  # 10 minutes

  # Tiered retention: keeps 1 snapshot per time bucket
  retention:
    hourly: 24
    daily: 7
    weekly: 4
    monthly: 3

## =============================================================================
## BorgBackup Defaults (Applied to all apps unless overridden)
## =============================================================================
borgbackup:
  image:
    repository: ghcr.io/frederikb96/kube-borg-backup/controller
    tag: latest
    pullPolicy: Always

  cron:
    schedule: "30 */6 * * *"  # Every 6 hours at :30
    startingDeadlineSeconds: 300
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1

  timeout: 7200  # 2 hours

  pod:
    image:
      repository: ghcr.io/frederikb96/kube-borg-backup/backup-runner
      tag: latest
      pullPolicy: Always
    privileged: true  # Required for PVC access
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"

  retention:
    hourly: 24
    daily: 7
    weekly: 4
    monthly: 3
    yearly: 1

## =============================================================================
## Restore Configuration (v6.0.0+)
## =============================================================================
restore:
  pod:
    image:
      repository: ghcr.io/frederikb96/kube-borg-backup/backup-runner
      tag: latest
      pullPolicy: Always

  # RBAC extensions for custom restore hooks
  # Standard permissions (Apps API, Batch API) included by default
  rbac:
    additionalRules: []
    # Example - Flux HelmRelease access:
    # - apiGroups: ["helm.toolkit.fluxcd.io"]
    #   resources: ["helmreleases"]
    #   verbs: ["get", "patch"]

## =============================================================================
## Applications
## =============================================================================
# Define your applications here. Each app can have snapshot, borgbackup, and restore config.
#
# Example structure:
# apps:
#   - name: myapp
#     namespace: default
#     createNamespace: false
#
#     # Snapshot config
#     snapshot:
#       pvcs:
#         - name: db-data
#           snapshotClass: longhorn
#           hooks:  # Optional: pre/post snapshot hooks
#             pre:
#               - pod: postgres-0
#                 command: ["psql", "-c", "SELECT pg_backup_start();"]
#             post:
#               - pod: postgres-0
#                 command: ["psql", "-c", "SELECT pg_backup_stop();"]
#
#     # Borg backup config
#     borgbackup:
#       borgRepo: borgbase-main  # Reference from borgRepos above
#       cache:
#         create: true
#         pvcName: myapp-borg-cache
#         storageClassName: local-path
#         size: 5Gi
#         # cacheTheCache: Copies cache from PVC to ephemeral local storage on startup for faster borg operations, then syncs back on shutdown.
#         # WARNING: If pod is terminated before rsync completes, cache may be inconsistent (data not lost, just cache rebuild slower next run).
#         # IMPORTANT: Only one pod should mount the cache PVC simultaneously to avoid conflicts (use ReadWriteOncePod access mode).
#         cacheTheCache: false  # Default: false
#         accessModes:
#           - ReadWriteOncePod  # Default: ReadWriteOncePod (recommended for borg cache)
#       pvcs:
#         - name: db-backup  # Becomes "{app}-db-backup" in borg archive
#           pvc: db-data     # Source PVC (must have snapshot)
#           class: longhorn-normal  # Clone PVC storage class
#           timeout: 3600
#           cloneBindTimeout: 300
#
#     # Restore hooks (v6.0.0+)
#     restore:
#       preHooks:  # Run before restore (fail-fast)
#         - type: scale
#           deployment: myapp
#           replicas: 0
#       postHooks:  # Run after restore (best-effort)
#         - type: scale
#           deployment: myapp
#           replicas: 1
#
# Available hook types:
# - exec: Run command in pod
#     type: exec
#     pod: postgres-0
#     container: postgres  # Optional
#     command: ["psql", "-c", "..."]
#
# - scale: Scale deployment/statefulset
#     type: scale
#     deployment: myapp  # OR statefulset: myapp-sts
#     replicas: 0
#     parallel: true  # Optional: run concurrently with other parallel hooks
#
# - shell: Local shell command (CLI restore only)
#     type: shell
#     command: ["flux", "suspend", "hr", "myapp"]
#     timeout: 300  # Optional

apps: []
