## =============================================================================
## Borg Repository Definitions (Reusable)
## =============================================================================
## Define borg repositories once, reference by name in apps
borgRepos:
  - name: borgbase-main
    repo: "ssh://user@borgbase.com/./repo"
    passphrase: "your-borg-passphrase"
    privateKey: |
      -----BEGIN OPENSSH PRIVATE KEY-----
      your-ssh-private-key-here
      -----END OPENSSH PRIVATE KEY-----

## =============================================================================
## Snapshot Defaults (Applied to all apps unless overridden)
## =============================================================================
snapshot:
  # Container image configuration
  image:
    repository: ghcr.io/frederikb96/kube-borg-backup/controller
    tag: latest
    pullPolicy: Always

  # CronJob schedule configuration
  cron:
    # When to run snapshots (cron format)
    schedule: "0 */4 * * *"
    # Max seconds to wait before giving up on starting a job
    startingDeadlineSeconds: 60
    # Number of successful jobs to keep
    successfulJobsHistoryLimit: 1
    # Number of failed jobs to keep
    failedJobsHistoryLimit: 1

  # CronJob timeout (activeDeadlineSeconds)
  # Maximum time in seconds for the snapshot controller to complete all snapshots
  timeout: 600

  # Snapshot retention policy (tiered retention)
  # Keeps 1 snapshot per time bucket
  retention:
    hourly: 24
    daily: 7
    weekly: 4
    monthly: 3

## =============================================================================
## BorgBackup Defaults (Applied to all apps unless overridden)
## =============================================================================
borgbackup:
  # Container image configuration
  image:
    repository: ghcr.io/frederikb96/kube-borg-backup/controller
    tag: latest
    pullPolicy: Always

  # CronJob schedule configuration
  cron:
    # When to run backups (cron format)
    schedule: "30 */6 * * *"
    # Max seconds to wait before giving up on starting a job
    startingDeadlineSeconds: 300
    # Number of successful jobs to keep
    successfulJobsHistoryLimit: 1
    # Number of failed jobs to keep
    failedJobsHistoryLimit: 1

  # CronJob timeout (activeDeadlineSeconds)
  # Maximum time in seconds for the backup controller to complete all backups
  timeout: 7200

  # Borg pod configuration (spawned by backup controller)
  pod:
    image:
      repository: ghcr.io/frederikb96/kube-borg-backup/backup-runner
      tag: latest
      pullPolicy: Always
    # Privileged mode enabled by default for maximum PVC compatibility
    privileged: true
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"

  # Borg retention policy (applied during borg prune)
  retention:
    hourly: 24
    daily: 7
    weekly: 4
    monthly: 3
    yearly: 1

## =============================================================================
## Applications (List of apps to backup)
## =============================================================================
apps:
  - name: example-app
    namespace: default
    createNamespace: false

    # Optional: Override snapshot defaults for this app
    snapshot:
      pvcs:
        # Example: PostgreSQL database with consistency hooks
        - name: postgres-data
          snapshotClass: longhorn
          hooks:
            # Pre-hooks run BEFORE snapshot (sequential, fail-fast)
            pre:
              - pod: postgres-0
                container: postgres  # Optional: specify if pod has multiple containers
                command: ["psql", "-U", "postgres", "-c", "SELECT pg_backup_start('snapshot', true);"]
            # Post-hooks run AFTER snapshot (sequential, ALWAYS run even on failure)
            post:
              - pod: postgres-0
                container: postgres
                command: ["psql", "-U", "postgres", "-c", "SELECT pg_backup_stop(true);"]

        # Example: File-based storage without hooks
        - name: app-data
          snapshotClass: longhorn

    # Optional: Override borgbackup defaults for this app
    borgbackup:
      # Reference to borg repository (from borgRepos list above)
      borgRepo: borgbase-main

      # Borg cache PVC (REQUIRED per-app, must be unique)
      # - If create: true → creates new PVC with name 'pvcName'
      # - If create: false → uses existing PVC with name 'pvcName' (must exist)
      cache:
        create: true              # Create new PVC or use existing
        pvcName: example-borg-cache  # PVC name (created or referenced)
        storageClassName: local-path  # Storage class (only used if create: true)
        size: 5Gi                # Size (only used if create: true)

      # PVCs to backup (must have corresponding snapshots created above)
      pvcs:
        - name: postgres-db
          pvc: postgres-data
          class: longhorn
          timeout: 3600
          cloneBindTimeout: 300
          # Optional: Override borg archive prefix (default: {app-name}-{backup-name})
          # archivePrefix: custom-db-backup

        - name: app-data-backup
          pvc: app-data
          class: longhorn
          timeout: 1800
          cloneBindTimeout: 300
